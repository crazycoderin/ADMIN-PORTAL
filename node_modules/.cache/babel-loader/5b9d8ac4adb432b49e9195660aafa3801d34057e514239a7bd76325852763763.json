{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\programing\\\\aashi\\\\aashi\\\\admin_panel\\\\src\\\\pages\\\\update.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Textfield from \"../components/common/textfield\";\nimport Button from \"../components/common/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  let oldUserData = JSON.parse(localStorage.getItem(\"editUserData\"));\n  const [oldNameState, setNameState] = useState(oldUserData.name);\n  const [oldEmailState, setEmailState] = useState(oldUserData.email);\n  const editedUser = () => {\n    let currentEle = [];\n    let name = document.getElementById(\"name\").value;\n    let email = document.getElementById(\"email\").value;\n    let userArr = JSON.parse(localStorage.getItem(\"userArr\"));\n    console.log(userArr);\n    console.log(name);\n    console.log(email);\n    userArr.map((user, index) => {\n      if (user.email === oldEmailState) {\n        console.log('sggggg');\n        let newUser = {\n          name: name,\n          email: email,\n          password: user.password,\n          role: user.Role\n        };\n        currentEle.push(newUser);\n      } else {\n        currentEle.push(user);\n      }\n      localStorage.removeItem(\"userArr\");\n      localStorage.setItem(\"userArr\", JSON.stringify(currentEle));\n      return currentEle;\n    });\n    console.log(JSON.parse(localStorage.getItem(\"userArr\")), 'NewuserArr');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Textfield, {\n      id: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      value: oldNameState,\n      onChange: e => {\n        setNameState(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n      id: \"email\",\n      label: \"Email\",\n      type: \"text\",\n      value: oldEmailState,\n      onChange: e => {\n        setEmailState(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Update\",\n      onClick: editedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"Ri1U/FfaYlI5GmdqEwwM3Y7Vrbs=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","Textfield","Button","Update","oldUserData","JSON","parse","localStorage","getItem","oldNameState","setNameState","name","oldEmailState","setEmailState","email","editedUser","currentEle","document","getElementById","value","userArr","console","log","map","user","index","newUser","password","role","Role","push","removeItem","setItem","stringify","e","target"],"sources":["D:/Rohit/programing/aashi/aashi/admin_panel/src/pages/update.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Textfield from \"../components/common/textfield\";\r\nimport Button from \"../components/common/button\";\r\nfunction Update() {\r\n  let oldUserData = JSON.parse(localStorage.getItem(\"editUserData\"));\r\n  const [oldNameState, setNameState] = useState(oldUserData.name);\r\n  const [oldEmailState, setEmailState] = useState(oldUserData.email);\r\n  const editedUser = () => {\r\n    \r\n    let currentEle = [];\r\n    let name = document.getElementById(\"name\").value;\r\n    let email = document.getElementById(\"email\").value;\r\n    let userArr = JSON.parse(localStorage.getItem(\"userArr\"));\r\n    console.log(userArr);\r\n    console.log(name);\r\n    console.log(email);\r\n    userArr.map((user, index) => {\r\n      if (user.email === oldEmailState) {\r\n        console.log('sggggg');\r\n        let newUser = {\r\n          name: name,\r\n          email: email,\r\n          password: user.password,\r\n          role: user.Role,\r\n        };\r\n          currentEle.push(newUser)\r\n        } else {\r\n          currentEle.push(user);\r\n        }\r\n        localStorage.removeItem(\"userArr\");\r\n        localStorage.setItem(\"userArr\", JSON.stringify(currentEle));\r\n        return currentEle;\r\n    });\r\n    console.log(JSON.parse(localStorage.getItem(\"userArr\")), 'NewuserArr');\r\n  };\r\n  return (\r\n    <div>\r\n      <Textfield\r\n        id={\"name\"}\r\n        label={\"Name\"}\r\n        type={\"text\"}\r\n        value={oldNameState}\r\n        onChange={(e) => {\r\n          setNameState(e.target.value);\r\n        }}\r\n      />{\" \"}\r\n      <br />\r\n      <Textfield\r\n        id={\"email\"}\r\n        label={\"Email\"}\r\n        type={\"text\"}\r\n        value={oldEmailState}\r\n        onChange={(e) => {\r\n          setEmailState(e.target.value);\r\n        }}\r\n      />{\" \"}\r\n      <br />\r\n      <Button label={\"Update\"} onClick={editedUser} /> <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}