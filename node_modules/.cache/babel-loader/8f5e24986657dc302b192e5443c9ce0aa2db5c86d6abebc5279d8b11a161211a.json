{"ast":null,"code":"var _jsxFileName = \"D:\\\\aashi\\\\admin_panel\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, memo } from \"react\";\nimport Button from \"../components/common/button\";\nimport Textfield from \"../components/common/textfield\";\nimport Link from \"../components/common/link\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isError, setIsError] = useState(false);\n  const [isErrorTest, setIsErrorTest] = useState(false);\n  let loginHandle = () => {\n    let email = document.getElementById(\"email\").value;\n    let password = document.getElementById(\"password\").value;\n    let userArr = localStorage.getItem(\"userArr\");\n    if (!userArr) {\n      alert(\"Please Signup first to login\");\n    } else {\n      let newUserArr = JSON.parse(userArr);\n      let loginStatus = false;\n      newUserArr.forEach(user => {\n        if (user.password === password && user.email === email) {\n          loginStatus = true;\n          alert(\"Log In successfull\");\n          setIsErrorTest(true);\n        }\n      });\n      if (!loginStatus) {\n        setIsError(true);\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(\"I will calll everytime\");\n  });\n\n  // compontDidMount\n  useEffect(() => {\n    console.log(\"I will calll only on mount\");\n  }, []);\n  useEffect(() => {\n    console.log(\"I will calll only if isError state get update\");\n  }, [isError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n      id: \"email\",\n      label: \"Email\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 74\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Log In\",\n      onClick: loginHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 57\n    }, this), isError === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Invalid credentails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"6YJ7LcvlxI7Juab483lql/WNVX4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","memo","Button","Textfield","Link","Login","isError","setIsError","isErrorTest","setIsErrorTest","loginHandle","email","document","getElementById","value","password","userArr","localStorage","getItem","alert","newUserArr","JSON","parse","loginStatus","forEach","user","console","log"],"sources":["D:/aashi/admin_panel/src/pages/login.js"],"sourcesContent":["import React, { useState, useEffect, memo} from \"react\";\r\nimport Button from \"../components/common/button\";\r\nimport Textfield from \"../components/common/textfield\";\r\nimport Link from \"../components/common/link\";\r\n\r\nfunction Login() {\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorTest, setIsErrorTest] = useState(false);\r\n\r\n  let loginHandle = () => {\r\n    let email = document.getElementById(\"email\").value;\r\n    let password = document.getElementById(\"password\").value;\r\n\r\n    let userArr = localStorage.getItem(\"userArr\");\r\n    if (!userArr) {\r\n      alert(\"Please Signup first to login\");\r\n    } else {\r\n      let newUserArr = JSON.parse(userArr);\r\n      let loginStatus = false;\r\n      newUserArr.forEach((user) => {\r\n        if (user.password === password && user.email === email) {\r\n          loginStatus = true;\r\n          alert(\"Log In successfull\");\r\n          setIsErrorTest(true)\r\n        }\r\n      });\r\n      if (!loginStatus) {\r\n        setIsError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(\"I will calll everytime\")\r\n  })\r\n\r\n  // compontDidMount\r\n  useEffect(()=>{\r\n    console.log(\"I will calll only on mount\")\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    console.log(\"I will calll only if isError state get update\")\r\n  },[isError])\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Page</h1> <br />\r\n      <Textfield id={\"email\"} label={\"Email\"} type={\"text\"} /> <br />\r\n      <Textfield id={\"password\"} label={\"Password\"} type={\"password\"} /> <br />\r\n      <Button label={\"Log In\"} onClick={loginHandle} /> <br />\r\n\r\n      {/* ------------------------------conditional rendring start -------------------------- */}\r\n      {isError === true ? <div>Invalid credentails</div> : \"\"} \r\n      {/* {isError === true && <div>Invalid credentails</div>} */}\r\n      {/* ------------------------------conditional rendring end -------------------------- */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,QAAO,OAAO;AACvD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,IAAI,MAAM,2BAA2B;AAAC;AAE7C,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,IAAIW,WAAW,GAAG,MAAM;IACtB,IAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IAClD,IAAIC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;IAExD,IAAIE,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC7C,IAAI,CAACF,OAAO,EAAE;MACZG,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,MAAM;MACL,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC;MACpC,IAAIO,WAAW,GAAG,KAAK;MACvBH,UAAU,CAACI,OAAO,CAAEC,IAAI,IAAK;QAC3B,IAAIA,IAAI,CAACV,QAAQ,KAAKA,QAAQ,IAAIU,IAAI,CAACd,KAAK,KAAKA,KAAK,EAAE;UACtDY,WAAW,GAAG,IAAI;UAClBJ,KAAK,CAAC,oBAAoB,CAAC;UAC3BV,cAAc,CAAC,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;MACF,IAAI,CAACc,WAAW,EAAE;QAChBhB,UAAU,CAAC,IAAI,CAAC;MAClB;IACF;EACF,CAAC;EAEDP,SAAS,CAAC,MAAI;IACZ0B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC,CAAC;;EAEF;EACA3B,SAAS,CAAC,MAAI;IACZ0B,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C,CAAC,EAAC,EAAE,CAAC;EAEL3B,SAAS,CAAC,MAAI;IACZ0B,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC9D,CAAC,EAAC,CAACrB,OAAO,CAAC,CAAC;EAGZ,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAC1B,QAAC,SAAS;MAAC,EAAE,EAAE,OAAQ;MAAC,KAAK,EAAE,OAAQ;MAAC,IAAI,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAC/D,QAAC,SAAS;MAAC,EAAE,EAAE,UAAW;MAAC,KAAK,EAAE,UAAW;MAAC,IAAI,EAAE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eACzE,QAAC,MAAM;MAAC,KAAK,EAAE,QAAS;MAAC,OAAO,EAAEI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,EAGvDJ,OAAO,KAAK,IAAI,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,GAAG,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAInD;AAEV;AAAC,GAvDQD,KAAK;AAAA,KAALA,KAAK;AAyDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}